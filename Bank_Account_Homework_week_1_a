#include <iostream>
#include <stdexcept>
using namespace std;

class BankAccount {
private:
    string accountNumber;
    string ownerName;
    double balance;

public:
    BankAccount(string accNum, string owner, double initialBalance) {
        if (initialBalance < 0) {
            throw invalid_argument("Initial balance cannot be negative.");
        }
        accountNumber = accNum;
        ownerName = owner;
        balance = initialBalance;
    }

    void deposit(double amount) {
        if (amount <= 0) {
            throw invalid_argument("Deposit amount must be positive.");
        }
        balance += amount;
    }

    void withdraw(double amount) {
        if (amount <= 0) {
            throw invalid_argument("Withdrawal amount must be positive.");
        }
        if (amount > balance) {
            throw runtime_error("Insufficient funds.");
        }
        balance -= amount;
    }

    double getBalance() const {
        return balance;
    }

    void displayDetails() const {
        cout << "Account: " << accountNumber << endl
             << ", Owner: " << ownerName << endl
             << ", Balance: " << balance << endl;
    }
};

int main() {
    try {
        BankAccount acc("12345", "Alice", -1000);
        acc.deposit(500);
        acc.withdraw(2000);
        acc.displayDetails(); // Expected: Account: 12345, Owner: Alice, Balance: 1300
    } 
    catch (const exception &e) {
        cerr << "Error: " << e.what() << endl;
    }
    return 0;
}
